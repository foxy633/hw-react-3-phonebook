{"version":3,"sources":["components/Filter/filter.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","index.js","components/ContactForm/contactForm.module.css","components/ContactList/contactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","styles","list","map","contact","list_item","name","number","list_button","type","onClick","id","Filter","value","onChangeFilter","filter_text","filter_input","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","form","onSubmit","this","form_label","form_input","form_button","Component","App","filter","addContact","item","cont","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","removeContact","contactId","localStorage","getItem","parsContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33becd8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_text\":\"filter_filter_text__3dASK\",\"filter_input\":\"filter_filter_input__2oQHX\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.list}>\r\n    {contacts.map((contact) => (\r\n      <li className={styles.list_item} key={contact.id}>\r\n        {`${contact.name} : ${contact.number}`}\r\n        {\r\n          <button\r\n            className={styles.list_button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./filter.module.css\";\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={styles.filter_text}>\r\n      Find contacts by name:\r\n      <input\r\n        className={styles.filter_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  // static propTypes = {\r\n  //   onAddContact: PropTypes.func.isRequired,\r\n  //   name: PropTypes.string.isRequired,\r\n  //   number: PropTypes.string.isRequired,\r\n  // };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact({ ...this.state });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.form_label}>\r\n          Name\r\n          <input\r\n            className={styles.form_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.form_label}>\r\n          Number\r\n          <input\r\n            className={styles.form_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.form_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    try {\n      const contacts = localStorage.getItem(\"contacts\");\n      if (contacts) {\n        const parsContacts = JSON.parse(contacts);\n\n        this.setState({ contacts: parsContacts });\n      }\n    } catch (e) {}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (item) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(item.name);\n    if (searchSameName) {\n      alert(`${item.name} is already in contacts`);\n    } else if (item.name.length === 0 || item.number.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = { id: uuidv4(), ...item };\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemoveContact={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__D142y\",\"form_label\":\"contactForm_form_label__3zNAr\",\"form_input\":\"contactForm_form_input__3U-_0\",\"form_button\":\"contactForm_form_button__1Oa1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__30VP1\",\"list_item\":\"contactList_list_item__16jmS\",\"list_button\":\"contactList_list_button__OSIP6\"};"],"sourceRoot":""}